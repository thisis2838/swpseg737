@using HoaLacLaptopShop.Areas.Public.ViewModels
@model HoaLacLaptopShop.Models.Order
@{
    ViewData["Title"] = "Checkout";
}

<link href="~/css/StyleSheet.css" rel="stylesheet">
<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

<h1>Checkout</h1>
<hr/>

<div class="row">
    <div class="col-lg-8">
        <form id="checkoutForm" asp-action="ConfirmOrder" method="post" asp-controller="Checkout">
            <!-- Billing Info -->
            <div class="card mb-4">
                <div class="card-body">
                    <h4 class="card-title">Order Info</h4>
                    <div class="form-row">
                        <div class="form-group col-lg-6">
                            <label asp-for="@Model.RecipientName">Name</label>
                            <input class="form-control" asp-for="@Model.RecipientName" placeholder="Enter recipient's name" />
                            <span asp-validation-for="@Model.RecipientName" class="text-danger"></span>
                        </div>
                        <div class="form-group col-lg-6">
                            <label asp-for="@Model.PhoneNumber">Phone Number</label>
                            <input type="tel" class="form-control" asp-for="@Model.PhoneNumber" placeholder="Enter recipient's phone number" />
                            <span asp-validation-for="@Model.PhoneNumber" class="text-danger"></span>
                        </div>
                    </div>
                    @*FIXME: The selects can't be asp-for selects due to validation not seeing their values for some reason...*@
                    <div class="form-row">
                        <div class="form-group col-lg-6">
                            <label for="city">City</label>
                            <select class="form-control" id="city" name="@nameof(Order.Province)" required>
                                <option value="0" disabled selected>Select City</option>
                                // Options rendered here
                            </select>
                            <span asp-validation-for="@Model.Province" class="text-danger"></span>
                        </div>
                        <div class="form-group col-lg-6">
                            <label for="district">District</label>
                            <select class="form-control" id="district" name="@nameof(Order.District)" required>
                                <option value="0" disabled selected>Select District</option>
                                // Options rendered here
                            </select>
                            <span asp-validation-for="@Model.District" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-lg-6">
                            <label for="ward">Ward</label>
                            <select class="form-control" id="ward" name="@nameof(Order.Ward)" required>
                                <option value="0" disabled selected>Select Ward</option>
                                // Options rendered here
                            </select>
                            <span asp-validation-for="@Model.Ward" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.Street">Street</label>
                        <input type="tel" class="form-control" asp-for="@Model.Street" placeholder="Enter Street" />
                        <span asp-validation-for="@Model.Street" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <!-- Payment Info -->
            <div class="card mb-4">
                <div class="card-body">
                    <h4 class="card-title">Payment Method</h4>
                    <div class="row">
                        <div class="col-lg-3 selection-card active text-center" onclick="selectCard(this)" cursor="pointer">
                            <div class="custom-control custom-radio">
                                <input type="radio" id="creditCard" name="paymentMethod" class="custom-control-input" value="Online" />
                                <label class="custom-control-label">
                                    <i class="bx bx-credit-card d-block h2 mb-3"></i>
                                    <span class="mb-3 d-block">VN Pay</span>
                                </label>
                            </div>
                        </div>
                        <div class="col-lg-3 selection-card text-center" onclick="selectCard(this)" cursor="pointer">
                            <div class="custom-control custom-radio">
                                <input type="radio" id="cashOnDelivery" name="paymentMethod" class="custom-control-input" value="CashOnDelivery" />
                                <label class="custom-control-label">
                                    <i class="bx bx-money d-block h2 mb-3"></i>
                                    <span class="mb-3 d-block">Cash on Delivery</span>
                                </label>
                            </div>
                        </div>
                        <input type="hidden" id="voucherCode" name="voucherCode" value="" />
                    </div>
                </div>
            </div>
            <button class="btn btn-primary btn-lg" type="submit" style="margin-top: 12px">Confirm Order</button>
        </form>
    </div>

    <div class="col-lg-4">
        <div class="card">
            <form id="voucherForm" class="form-inline">
                <div class="card-body">
                    <h4 class="card-title">Voucher</h4>
                    <input type="text" class="form-control mr-2" id="voucher-code" placeholder="Enter voucher code" value "" required/>
                    <button type="submit" class="btn btn-primary mt-2" style="margin-top: 12px">Submit</button>
                </div>
            </form>
        </div>
        
        <!-- Voucher Form (Separate) -->
        
        <div class="card">
            <div class="order-summary card-body">
                <h4 class="card-title">Order Summary</h4>
                <ul class="list-group mb-3">
                    @foreach (var item in Model.OrderDetails)
                    {
                        <li class="list-group-item d-flex justify-content-between" style="align-items: center">
                            <div style="margin-right: 10px;">
                                <a href="@Url.ActionLink("Details", "Products", new {id = item.ProductId})"><h6 class="my-0">@item.Product.Name</h6></a>
                                <small class="text-muted">@item.ProductPrice.ToString("N0") x @item.Quantity</small>
                            </div>
                            <span class="text-muted">@item.SubTotal.ToString("N0")</span>
                        </li>
                    }
                    <li class="list-group-item d-flex justify-content-between">
                        <span>Total</span>
                        <strong id="subtotal">@Model.TotalPrice.ToString("N0")</strong>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span>Discount</span>
                        <strong id="discount-value">None</strong> <!-- Adjust as necessary -->
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <strong>Final Price</strong>
                        <strong id="total-amount">@Model.TotalPrice.ToString("N0")</strong>
                    </li>
                </ul>
            </div>
        </div>
    </div>

</div>
<!-- Order Summary -->
<!-- Bootstrap JS and dependencies -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
@*     <script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.5.4/dist/umd/popper.min.js"></script> *@
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
@section Scripts 
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Get the select tags by id
        const provinceSelect = document.getElementById("city");
        const districtSelect = document.getElementById("district");
        const wardSelect = document.getElementById("ward");

        document.addEventListener('DOMContentLoaded', () =>
        {
            function getProvinces()
            {
                fetch('https://esgoo.net/api-tinhthanh/1/0.htm')
                    .then(function (response)
                    {
                        return response.json();
                    })
                    .then(function (data_tinh)
                    {
                        if (data_tinh.error === 0)
                        {

                            data_tinh.data.forEach(function (val_tinh)
                            {
                                var option = document.createElement('option');
                                option.value = val_tinh.full_name;
                                option.innerHTML = val_tinh.full_name;
                                option.setAttribute('data-province-id', val_tinh.id); // Set tinh.id as a data attribute
                                provinceSelect.appendChild(option);
                            });
                        }
                    });
            }
            // Function to get districts
            function getDistricts(provinceId)
            {
                fetch('https://esgoo.net/api-tinhthanh/2/' + provinceId + '.htm')
                    .then(function (response)
                    {
                        return response.json();
                    })
                    .then(function (data_quan)
                    {
                        if (data_quan.error === 0)
                        {
                            districtSelect.innerHTML = ''; // Clear previous options

                            data_quan.data.forEach(function (val_quan)
                            {
                                var option = document.createElement('option');
                                option.value = val_quan.full_name;
                                option.innerHTML = val_quan.full_name;
                                option.setAttribute('data-district-id', val_quan.id); // Set tinh.id as a data attribute
                                districtSelect.appendChild(option);
                            });
                        }
                    });
            }
            function getWards(districtId)
            {
                fetch('https://esgoo.net/api-tinhthanh/3/' + districtId + '.htm')
                    .then(function (response)
                    {
                        return response.json();
                    })
                    .then(function (data_quan)
                    {
                        if (data_quan.error === 0)
                        {
                            wardSelect.innerHTML = ''; // Clear previous options

                            data_quan.data.forEach(function (val_phuong)
                            {
                                var option = document.createElement('option');
                                option.value = val_phuong.full_name;
                                option.innerHTML = val_phuong.full_name;
                                wardSelect.appendChild(option);
                            });
                        }
                    });
            }
            getProvinces();
            provinceSelect.addEventListener('change', function (e)
            {
                var selectedOption = e.target.options[e.target.selectedIndex];
                var provinceId = selectedOption.getAttribute('data-province-id'); // Get provinceId from data attribute
                getDistricts(provinceId);

                districtSelect.addEventListener('change', (e) =>
                {
                    var selectedOption = e.target.options[e.target.selectedIndex];
                    var districtId = selectedOption.getAttribute('data-district-id'); // Get districtId from data attribute;

                    getWards(districtId)
                })
            })
        });
    </script>
    <script>
        const totalPrice = @Model.TotalPrice;

        function formatCurrency(value)
        {
            return new Intl.NumberFormat('vi-VN', { style: 'decimal' }).format(value);
        };

        const totalAmountElement = document.getElementById('total-amount');
        const discountElement = document.getElementById('discount-value');

        document.getElementById('voucherForm').addEventListener('submit', function (event)
        {
            event.preventDefault();
            const voucherCode = document.getElementById('voucher-code').value;

            const subtotalElement = document.getElementById('subtotal');

            document.getElementById('voucherCode').value = voucherCode; // Update hidden field in the main form
            const requestPayload = { voucherCode: voucherCode, subTotal: totalPrice };
            fetch('/Checkout/CheckVoucher', 
                {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': '@Html.AntiForgeryToken()' // Ensure you generate this token correctly
                    },
                    body: JSON.stringify(requestPayload)
                })
                .then(response => response.json())
                .then(data =>
                {
                    console.log(data)

                    document.getElementById('voucherCode').value = voucherCode;

                    if (data.valid === true)
                    {
                        discountElement.textContent = `-${formatCurrency(data.discount)}`;
                        totalAmountElement.textContent = `${formatCurrency(totalPrice - data.discount)}`;
                        showMessage("Successfully applied voucher '" + voucherCode + "'");
                    }
                    else
                    {
                        showError(data.issue);
                        discountElement.textContent = 'None';
                        totalAmountElement.textContent = `${formatCurrency(totalPrice)}`;
                    }
                })
                .catch(error => this.showError('Error while trying to apply voucher: ' + error));
        });

        function selectCard(element)
        {
            // Remove 'active' class from all siblings
            const siblings = element.parentNode.children;
            for (let i = 0; i < siblings.length; i++)
            {
                siblings[i].classList.remove('active');
            }
            // Add 'active' class to the clicked element
            element.classList.add('active');
            // Check the inside input
            const input = element.querySelector('input');
            input.checked = true;
        }
    </script>
}


<style>
    .card
    {
        margin-bottom: 20px;
    }
</style>