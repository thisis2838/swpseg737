@using HoaLacLaptopShop.Helpers
@using HoaLacLaptopShop.Areas.Public.ViewModels
@model HoaLacLaptopShop.Models.Product

@{
    ViewData["Title"] = "Details";

    var brandsOtherProducts = (List<Product>)ViewData["BrandsOtherProducts"]!;
}

<section>
    <div class="row">
        <div class="col-md-4">
            <div class="product-main-box">
                <div class="col-lg-12" id="view-product" style="height:75%;margin:auto;">
                    <img id="product-main-img"
                         src="@Model.ProductImages.FirstOrDefault()?.GetProductImageURL()"
                         style="object-fit: cover; height:100%"
                         alt="" />
                </div>
                <div class="row">
                    @{
                        bool first = true;
                        foreach (var img in Model.ProductImages)
                        {
                                <img class="col-sm-4 product-extra-img"
                                     src="@img.GetProductImageURL()"
                                     onclick="changeMainImage(this)"
                                     style="cursor: pointer"
                                     alt=""
                                     id="@(first ? "product-img-shown" : "")">
                            first = false;
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="product-main-box" id="product-main-info">
                <div>
                    <h2>@Model.Name</h2>
                    <div style=" padding-left: 0;">
                        <span>@(Model.AveargeRating.ToString("0.0"))</span>
                        <partial name="_RatingStarsView.cshtml" model="@new {Rating = (int)Model.AveargeRating, Size = 15}" />
                        <span style="font-size: 12px;">(@(Model.ReviewCount) reviews)</span>
                        &bull;
                        @{
                            var sold = Model.OrderDetails.Sum(x => x.Quantity);
                            var buyers = Model.OrderDetails.Select(x => x.Order).Select(x => x.BuyerID).Distinct().Count();
                        }
                        <span>@sold sold to @buyers buyer@(buyers != 1 ? "s" : "")</span>
                    </div>
                </div>
                <p id="product-price">@Model.Price.ToString("N0")</p>
                @if (Model.IsLaptop && Model.Laptop != null)
                {
                    <div id="laptop-specs">
                        <div>
                            <span><img src="~/images/icons/cpu.svg" width="20px" style="margin: 5px" /> CPU</span>
                            <strong>@Model.Laptop.CPUSeries.Manufacturer.Name @Model.Laptop.CPUSeries.Name</strong>
                        </div>
                        <div>
                            <span><img src="~/images/icons/gpu.svg" width="20px" style="margin: 5px" /> GPU</span>
                            <strong>@Model.Laptop.GPUSeries.Manufacturer.Name @Model.Laptop.GPUSeries.Name</strong>
                        </div>
                        <div>
                            <span><img src="~/images/icons/ram.svg" width="20px" style="margin: 5px" /> RAM</span>
                            <strong>@Model.Laptop.RAM GB</strong>
                        </div>
                    </div>
                    <div id="laptop-specs">
                        <div>
                            <span><img src="~/images/icons/screen.svg" width="20px" style="margin: 5px" /> Screen</span>
                            <strong>@Model.Laptop.ScreenSize inch, @Model.Laptop.ScreenAspectRatio</strong>
                        </div>
                        <div>
                            <span><img src="~/images/icons/res.svg" width="20px" style="margin: 5px" /> Resolution</span>
                            <strong>@Model.Laptop.ScreenResolution</strong>
                        </div>
                        <div>
                            <span><img src="~/images/icons/storage.svg" width="20px" style="margin: 5px" /> Storage</span>
                            <strong>@Model.Laptop.StorageSize GB, @Model.Laptop.StorageType.ToString()</strong>
                        </div>
                    </div>
                }
                <div>
                </div>
                <div id="purchase-area">
                    @using (Html.BeginForm("ModifyQuantity", "Cart", FormMethod.Post))
                    {
                        if (Model.Stock == 0)
                        {
                            <div style="line-height: 30px; color: red">
                                <strong>Out of stock! Please check back later for reavailability.</strong>
                            </div>
                        }
                        else
                        {
                            <div class="pull-left" style="line-height: 30px;">
                                Units Left: <strong>@Model.Stock</strong>
                            </div>
                            <div class="pull-right">
                                <input type="number" class="form-control" style="display:inline-block; width:100px;" name="quantity" value="1" min="1" max="@Model.Stock" />
                                <input type="hidden" name="productID" value="@Model.ID" />
                                <button type="submit" class="btn btn-primary cart pull-right">
                                    <i class="fa fa-shopping-cart"></i>
                                    Add to cart
                                </button>
                            </div>
                        }
                    }
                </div>

            </div><!--/product-main-box-->
        </div>
    </div>

    <div class="row">
        <div class="category-tab shop-details-tab">
            <!--category-tab-->
            <div class="col-sm-12">
                <ul class="nav nav-tabs">
                    <li><a href="#details" data-toggle="tab">Details</a></li>
                    <li><a href="#reviews" data-toggle="tab">Reviews (@Model.ProductReviews.Count())</a></li>
                </ul>
            </div>
            <div class="tab-content">
                <div class="tab-pane active fade" id="details">
                    <div class="col-md-8">
                        <p style="white-space: pre-wrap; text-align: justify">@Model.Description</p>
                    </div>
                    <div class="col-md-4">
                        <h2>About @Model.Brand.Name</h2>
                        <p><b>Country of Origin:</b> @Model.Brand.Country</p>
                        <p>@Model.Brand.Description</p>

                        <h3>Other products from @Model.Brand.Name</h3>
                        <div id="brands-other-products">
                            @foreach (var p in brandsOtherProducts)
                            {
                                <partial name="../Shared/Products/_Card.cshtml" model="p" />
                            }
                        </div>

                    </div>
                </div>

                <div class="tab-pane fade in" id="reviews">
                    <div class="col-sm-12">
                        @if (Model.ProductReviews.Count() > 0)
                        {
                            var ownReview = Model.ProductReviews.FirstOrDefault(x => x.ReviewerId == Context.GetCurrentUserID());
                            if (ownReview != null)
                            {
                                var reviews = Model.ProductReviews.Where(x => x != ownReview);
                                Model.ProductReviews = reviews.Prepend(ownReview).ToList();
                            }

                            <div class="filter-buttons" style="margin-bottom: 5px">
                                <button style="background-color: white;
                                                color: black;
                                                border: 2px solid  #fe980f;
                                                border-radius: 5px;
                                                padding: 6px;
                                                margin: 5px;
                                                cursor: pointer;"
                                        class="active" 
                                        onclick="filterReviews(0,this)">
                                    All
                                </button>
                                <button style="background-color: white;
                                                color: black;
                                                border-radius: 5px;
                                                border: 1px solid black;
                                                padding: 6px;
                                                margin: 5px;
                                                cursor: pointer;"
                                    onclick="filterReviews(5,this)">
                                    5 <svg xmlns="http://www.w3.org/2000/svg" width="12px" height="12px" viewBox="0 0 24 24">
                                        <path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z" />
                                    </svg>
                                </button>
                                <button style="background-color: white;
                                                border: 1px solid black;
                                                border-radius: 5px;
                                                color: black;
                                                padding: 6px;
                                                margin: 5px;
                                                cursor: pointer;" 
                                onclick="filterReviews(4,this)">
                                    4 <svg xmlns="http://www.w3.org/2000/svg" width="12px" height="12px" viewBox="0 0 24 24">
                                        <path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z" />
                                    </svg>
                                </button>
                                <button style="background-color: white;
                                                border: 1px solid black;
                                                border-radius: 5px;
                                                color: black;
                                                padding: 6px;
                                                margin: 5px;
                                                cursor: pointer;" onclick="filterReviews(3,this)">
                                    3 <svg xmlns="http://www.w3.org/2000/svg" width="12px" height="12px" viewBox="0 0 24 24">
                                        <path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z" />
                                    </svg>
                                </button>
                                <button style="background-color: white;
                                                border: 1px solid black;
                                                border-radius: 5px;
                                                color: black;
                                                padding: 6px;
                                                margin: 5px;
                                                cursor: pointer;" onclick="filterReviews(2,this)">
                                    2 <svg xmlns="http://www.w3.org/2000/svg" width="12px" height="12px" viewBox="0 0 24 24">
                                        <path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z" />
                                    </svg>
                                </button>
                                <button style="background-color: white;
                                                border: 1px solid black;
                                                border-radius: 5px;
                                                color: black;
                                                padding: 6px;
                                                margin: 5px;
                                                cursor: pointer;" onclick="filterReviews(1,this)">
                                    1 <svg xmlns="http://www.w3.org/2000/svg" width="12px" height="12px" viewBox="0 0 24 24">
                                        <path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z" />
                                    </svg>
                                </button>
                            </div>

                            <div id="reviews-container">
                                @foreach (var review in Model.ProductReviews)
                                {
                                    <div class="product-review"
                                         id="@(review == ownReview ? "own-review" : "")"
                                         data-rating="@review.Rating">
                                        <p style="vertical-align: central">
                                            <span><partial name="_RatingStarsView.cshtml" model="@new {Rating = review.Rating, Size = 20}" /></span>&bull;
                                            <i class="fa fa-user"></i> @(review == ownReview ? "You" : review.Reviewer.Name) &bull;
                                            <i class="fa-solid fa-clock"></i> @review.ReviewTime
                                        </p>
                                        <p>@review.Content</p>
                                    </div>
                                }
                            </div>
                        }


                        else
                        {
                            <p>No reviews yet</p>
                        }

                        @if (Context.IsLoggedIn())
                        {
                            var userID = Context.GetCurrentUserID()!;
                            var hasBoughtBefore = Model.OrderDetails.Any(od => od.ProductId == Model.ID && od.Order.BuyerID == userID);
                            var ownReview = Model.ProductReviews.FirstOrDefault(pr => pr.ProductId == Model.ID && pr.ReviewerId == userID);
                            @if (hasBoughtBefore)
                            {
                                <div class="product-review">
                                    @if (ownReview != null)
                                    {
                                        <p><b>Edit Your Review</b></p>
                                        <form asp-action="EditReview">
                                            <input type="hidden" name="pId" value="@Model.ID" />
                                            <div onmouseout="CRateSelected()">
                                                <div style="display: inline-block; font-size: 20px">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <span style="display: inline-block;"
                                                              id="@($"span{i}")"
                                                              onmouseout="@($"CRateOut({i})")" onmouseover="@($"CRateOver({i})")" onclick="@($"CRateClick({i})")"
                                                              class="glyphicon glyphicon-star-empty"></span>
                                                    }
                                                </div>
                                            </div>
                                            <div><input type="hidden" id="lblRating" name="rating" /></div>
                                            <textarea name="review">@ownReview.Content</textarea>
                                            <button type="submit" class="btn btn-default">Edit</button>
                                            <input type="submit" class="btn btn-danger" name="delete" value="Delete" />

                                        </form>
                                    }
                                    else
                                    {
                                        <p><b>Write Your Review</b></p>
                                        <form asp-action="AddReview">
                                            <input type="hidden" name="pId" value="@Model.ID" />
                                            <div onmouseout="CRateSelected()">
                                                <div style="display: inline-block; font-size: 20px">
                                                    @for (int i = 1; i <= 5; i++)
                                                    {
                                                        <span style="display: inline-block;"
                                                              id="@($"span{i}")"
                                                              onmouseout="@($"CRateOut({i})")" onmouseover="@($"CRateOver({i})")" onclick="@($"CRateClick({i})")"
                                                              class="glyphicon glyphicon-star-empty">
                                                        </span>
                                                    }
                                                </div>
                                            </div>
                                            <div><input type="hidden" id="lblRating" name="rating" /></div>
                                            <div>
                                                <textarea name="review"></textarea>
                                                <button type="submit" class="btn btn-primary">Submit</button>
                                            </div>
                                        </form>
                                    }
                                </div>
                            }
                            else
                            {
                                <div>Please purchase the product first before reviewing!</div>
                            }

                        }
                        else
                        {
                            <form asp-action="Login" asp-controller="Users">
                                <button type="submit">Please login to review!</button>
                            </form>
                        }
                    </div>
                </div>

            </div>
        </div><!--/category-tab-->

    </div>
</section>

@section Scripts
{
    <script>
        function CRateOut(rating) {
            for (var i = 1; i <= rating; i++) {
                $("#span" + i).attr('class', 'glyphicon glyphicon-star-empty');
            }
        }
        function CRateOver(rating) {
            for (var i = 1; i <= rating; i++) {
                $("#span" + i).attr('class', 'glyphicon glyphicon-star');
            }
        }
        function CRateClick(rating) {
            $("#lblRating").val(rating);
            for (var i = 1; i <= rating; i++) {
                $("#span" + i).attr('class', 'glyphicon glyphicon-star');
            }

            for (var i = rating + 1; i <= 5; i++) {
                $("#span" + i).attr('class', 'glyphicon glyphicon-star-empty');
            }
        }
        function CRateSelected() {
            var rating = $("#lblRating").val();
            for (var i = 1; i <= rating; i++) {
                $("#span" + i).attr('class', 'glyphicon glyphicon-star');
            }
        }

        function changeMainImage(img) {
            var mainImg = document.getElementById("product-main-img");
            document.getElementById("product-img-shown").removeAttribute("id");
            img.setAttribute("id", "product-img-shown");
            mainImg.src = img.src;
        }

        $(document).ready(() => { $('[href="' + (window.location.hash || '#details') + '"]').tab('show'); });

        function filterReviews(rating, button) {
            var reviews = document.querySelectorAll('.product-review');
            reviews.forEach(function (review) {
                if (rating === 0) {
                    // Show all reviews
                    review.style.display = 'block';
                } else {
                    // Show only reviews with the selected rating
                    if (parseInt(review.getAttribute('data-rating')) === rating) {
                        review.style.display = 'block';
                    } else {
                        review.style.display = 'none';
                    }
                }
            });

            var buttons = document.querySelectorAll('.filter-buttons button');
            buttons.forEach(function (btn) {
                //border: 1px solid ;
                btn.style.border = '1px solid black'; // Reset background color// Reset text color
            });

            button.style.border = '2px solid  #fe980f'; // Reset background color// Reset text color
        }


    </script>
}


<style>
    .fa-star {
        width: 15px;
        height: 15px;
    }

    #product-price {
        color: #FE980F;
        float: left;
        font-family: 'Roboto', sans-serif;
        font-size: 30px;
        font-weight: 700;
    }


    #product-main-info {
        display: flex;
        flex-direction: column;
        justify-content: space-between
    }

    #product-main-img {
        display: block;
        margin: auto;
    }


    .product-main-box {
        height: 350px;
        border: 2px solid #F7F7F0;
        overflow: hidden;
        padding: 30px;
        margin-bottom: 30px;
        position: relative;
    }

        .product-main-box h2 {
            color: #363432;
            font-family: 'Roboto', sans-serif;
            font-size: 20px;
            margin-top: 0;
        }

        .product-main-box p {
            color: #696763;
            font-family: 'Roboto', sans-serif;
            margin-bottom: 5px;
        }


    .tab-pane {
        margin: 10px
    }

    #laptop-specs {
        display: flex;
        font-size: 12px;
    }

        #laptop-specs div {
            background: #f7f7f0;
            border-radius: 10px;
            margin: 5px;
            flex: 1;
            width: 0;
            padding: 5px;
            padding-left: 10px;
        }

        #laptop-specs span {
            margin-bottom: 0;
        }

    .product-review {
        margin: 10px;
        background: #f7f7f0;
        padding: 15px;
        border-radius: 10px;
    }

    #product-img-shown {
        border: 2px solid #fe980f;
    }

    #own-review {
        border: 2px solid #fe980f;
    }

    #brands-other-products {
        max-height: 75vh;
        overflow-x: hidden;
        overflow-y: scroll;
    }

</style>
