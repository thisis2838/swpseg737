@using HoaLacLaptopShop.Areas.Administration.ViewModels
@using System.Collections.Generic
@model StatsViewModel

@{

    bool totalRev = Model.GeneralStats.TotalRevenue is not null;

    var histo = Model.HistoricalStats;
    var salesLabels = histo.Select(x => x.StartDate.ToShortDateString()).ToList();
    var revenueData = histo.Select(x => (x.Statistics.TotalRevenue ?? 0m) / 1_000_000m).ToList();
    var grossSalesData = histo.Select(x => x.Statistics.GrossSales / 1_000_000m).ToList();
    var unitsData = histo.Select(x => x.Statistics.UnitsSold).ToList();
    var ordersData = histo.Select(x => x.Statistics.NumberOfOrders).ToList();
}
<script>
    document.addEventListener("DOMContentLoaded", function ()
    {
        // Bar chart
        new Chart(document.getElementById("chartjs-dashboard-bar"), {
            type: "line",
            data:
            {
                labels: @Html.Raw(Json.Serialize(salesLabels)),
                datasets:
                    [
                        @if(totalRev)
                        {
                            <text>
                            {
                                label: "Revenue (millions)",
                                data: @Html.Raw(Json.Serialize(revenueData)),

                                fill: false,
                                backgroundColor: 'green',
                                borderColor: 'green',
                                hoverBackgroundColor: 'green',
                                hoverBorderColor: 'green',
                            },
                            </text>
                        }
                        {
                            label: "Gross Sales (millions)",
                            data: @Html.Raw(Json.Serialize(grossSalesData)),

                            fill: false,
                            backgroundColor: 'darkgreen',
                            borderColor: 'darkgreen',
                            hoverBackgroundColor: 'darkgreen',
                            hoverBorderColor: 'darkgreen',
                        },
                        {
                            label: "Units sold",
                            data: @Html.Raw(Json.Serialize(unitsData)),

                            fill: false,
                            backgroundColor: 'lightgreen',
                            borderColor: 'lightgreen',
                            hoverBackgroundColor: 'lightgreen',
                            hoverBorderColor: 'lightgreen',
                        },
                        {
                            label: "Orders",
                            data: @Html.Raw(Json.Serialize(ordersData)),

                            fill: false,
                            backgroundColor: 'blue',
                            borderColor: 'blue',
                            hoverBackgroundColor: 'blue',
                            hoverBorderColor: 'blue',
                        },
                    ]
            },
            options: {
                maintainAspectRatio: false,
                scales:
                {
                    yAxes: 
                        [{
                            stacked: false,
                        }],
                    xAxes:
                        [{
                            stacked: false,
                            gridLines: { display: false },
                        }]
                }
            }
        });

        function getLabels()
        {
            var currentDate = new Date();
            var labels = [];
            for (var i = 0; i < 7; i++)
            {
                var date = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - i);
                var day = date.getDate();
                var month = date.getMonth() + 1;
                var formattedDate = day + "/" + month;
                labels.unshift(formattedDate);
            }
            return labels;
        }
    });
</script>